<Window
    x:Class="Pic2PixelStylet.Pages.ShellView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:Pic2PixelStylet.Behaviors"
    xmlns:converters="clr-namespace:Pic2PixelStylet.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Pic2PixelStylet.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:s="https://github.com/canton7/Stylet"
    xmlns:validation="clr-namespace:Pic2PixelStylet.ValidationRules"
    x:Name="MyShellView"
    Title="图片像素化v1.1"
    Width="1200"
    Height="850"
    AllowDrop="True"
    mc:Ignorable="d">
    <Window.Resources>
        <converters:BoolInverseConverter x:Key="BoolInverseConverter" />
        <converters:MouseEventArgsToPointConverter x:Key="MouseEventArgsToPointConverter" />
        <converters:WidthHeightToSizeConverter x:Key="SizeConverter" />
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
        <converters:BoolOrToVisibilityConverter x:Key="BoolOrToVisibilityConverter" />
        <converters:ValidationErrorsConverter x:Key="ValidationErrorsConverter" />
        <Style TargetType="GroupBox">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Margin" Value="3" />
            <Setter Property="Padding" Value="3" />
            <Setter Property="Header" Value="" />
            <Setter Property="BorderBrush" Value="{DynamicResource TextFillColorDisabledBrush}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="GroupBox">
                        <Grid>
                            <Rectangle
                                Fill="{TemplateBinding Background}"
                                Stroke="{TemplateBinding BorderBrush}"
                                StrokeDashArray="4 2"
                                StrokeThickness="{TemplateBinding BorderThickness}" />
                            <Border Padding="{TemplateBinding Padding}">
                                <ContentPresenter Margin="{TemplateBinding Padding}" />
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding
            Key="V"
            Command="{s:Action PasteCommand}"
            Modifiers="Control" />
    </Window.InputBindings>
    <i:Interaction.Behaviors>
        <behaviors:ImageDragDropBehavior
            x:Name="ImageDragDropBehavior"
            HasErrorChangeCommand="{s:Action DragOverHasErrorChangeCommand}"
            ImportImageCommand="{s:Action ImportImage}"
            IsSuccess="{Binding HasImage, Mode=OneWayToSource}" />
    </i:Interaction.Behaviors>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="ContentRendered">
            <i:InvokeCommandAction Command="{s:Action ResizeCanvasCommand}">
                <i:InvokeCommandAction.CommandParameter>
                    <MultiBinding Converter="{StaticResource SizeConverter}">
                        <Binding ElementName="CanvasContainer" Path="ActualWidth" />
                        <Binding ElementName="CanvasContainer" Path="ActualHeight" />
                    </MultiBinding>
                </i:InvokeCommandAction.CommandParameter>
            </i:InvokeCommandAction>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="4*" />
                <ColumnDefinition Width="*" MaxWidth="300" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SizeChanged">
                        <i:InvokeCommandAction Command="{s:Action ResizeCanvasCommand}" EventArgsParameterPath="NewSize" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseWheel">
                        <i:InvokeCommandAction Command="{s:Action ZoomCommand}" PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <i:Interaction.Behaviors>
                    <behaviors:DragImageBehavior DragImageCommand="{s:Action DragImage}" IsDragEnabeled="{Binding IsCropped, Mode=OneWay, Converter={StaticResource BoolInverseConverter}}" />
                </i:Interaction.Behaviors>
                <Canvas x:Name="CanvasContainer" Background="{DynamicResource SystemChromeLowColorBrush}">
                    <Image
                        Canvas.Left="{Binding ImageLeft, Mode=TwoWay}"
                        Canvas.Top="{Binding ImageTop, Mode=TwoWay}"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Source="{Binding OriginalImage, Mode=OneWay}">
                        <Image.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="{Binding ScaleFactor, Mode=OneWay}" ScaleY="{Binding ScaleFactor, Mode=OneWay}" />
                            </TransformGroup>
                        </Image.RenderTransform>
                    </Image>
                    <Border
                        Canvas.Left="{Binding CropLeft, Mode=OneWay}"
                        Canvas.Top="{Binding CropTop, Mode=OneWay}"
                        Width="{Binding CropAreaWidth, Mode=OneWay}"
                        Height="{Binding CropAreaHeight, Mode=OneWay}"
                        Background="Transparent"
                        BorderBrush="{DynamicResource SystemFillColorCriticalBrush}"
                        BorderThickness="2">
                        <local:PixelGrid
                            x:Name="PixelGrid"
                            Cells="{Binding Cells, Mode=OneWay}"
                            Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}}" />
                    </Border>
                </Canvas>
                <Path Fill="{DynamicResource SmokeFillColorDefaultBrush}" Opacity="0.8">
                    <Path.Data>
                        <CombinedGeometry GeometryCombineMode="Exclude">
                            <CombinedGeometry.Geometry1>
                                <RectangleGeometry Rect="{Binding ContainerRect, Mode=OneWay}" />
                            </CombinedGeometry.Geometry1>
                            <CombinedGeometry.Geometry2>
                                <RectangleGeometry Rect="{Binding CropRect, Mode=OneWay}" />
                            </CombinedGeometry.Geometry2>
                        </CombinedGeometry>
                    </Path.Data>
                </Path>
            </Grid>
            <ScrollViewer Grid.Column="1">
                <Border Padding="5" Background="{DynamicResource TextOnAccentFillColorPrimaryBrush}">
                    <StackPanel Orientation="Vertical">
                        <TextBlock Margin="0,5" HorizontalAlignment="Left">
                            <Run>放大比:</Run>
                            <Run Text="{Binding ScaleFactor, Mode=OneWay, StringFormat=F2}" />
                        </TextBlock>
                        <GroupBox Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverse}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock HorizontalAlignment="left">
                                    宽度(像素)：
                                </TextBlock>
                                <TextBox x:Name="PixelColsTextBox" HorizontalAlignment="Stretch">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PixelCols"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:NumericMinMaxValidateRule
                                                    ErrorMessage="输入值必须是{0}到{1}之间的整数"
                                                    MaxValue="1000"
                                                    MinValue="1" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                    Text="{Binding ElementName=PixelColsTextBox, Path=(Validation.Errors), Converter={StaticResource ValidationErrorsConverter}}"
                                    TextWrapping="Wrap"
                                    Visibility="{Binding ElementName=PixelColsTextBox, Path=(Validation.HasError), Converter={StaticResource BoolToVisibilityConverter}}" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverse}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock HorizontalAlignment="Left">
                                    高度(像素)：
                                </TextBlock>
                                <TextBox x:Name="PixelRowsTextBox" HorizontalAlignment="Stretch">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="PixelRows"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:NumericMinMaxValidateRule
                                                    ErrorMessage="输入值必须是{0}到{1}之间的整数"
                                                    MaxValue="1000"
                                                    MinValue="1" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                    Text="输入值必须在1~1000之间"
                                    TextWrapping="Wrap"
                                    Visibility="{Binding ElementName=PixelRowsTextBox, Path=(Validation.HasError), Converter={StaticResource BoolToVisibilityConverter}}" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Left">
                                    阈值(0~255)：
                                </TextBlock>
                                <Grid>
                                    <Slider
                                        x:Name="ThresholdSlider"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Maximum="255"
                                        Minimum="0"
                                        Value="{Binding Threshold, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                        <i:Interaction.Behaviors>
                                            <behaviors:SliderMouseWheelBehavior />
                                        </i:Interaction.Behaviors>
                                    </Slider>
                                </Grid>
                                <TextBox
                                    x:Name="ThresholdTextBox"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    MinWidth="20"
                                    HorizontalAlignment="Stretch">
                                    <TextBox.Text>
                                        <Binding
                                            Mode="TwoWay"
                                            Path="Threshold"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:NumericMinMaxValidateRule
                                                    ErrorMessage="输入值必须是{0}到{1}之间的整数"
                                                    MaxValue="255"
                                                    MinValue="0" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                    Text="{Binding ElementName=ThresholdTextBox, Path=(Validation.Errors), Converter={StaticResource ValidationErrorsConverter}}"
                                    TextWrapping="Wrap"
                                    Visibility="{Binding ElementName=ThresholdTextBox, Path=(Validation.HasError), Converter={StaticResource BoolToVisibilityConverter}}" />
                            </StackPanel>
                        </GroupBox>
                        <GroupBox Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}}">
                            <StackPanel Orientation="Vertical">
                                <TextBlock
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    HorizontalAlignment="Left">
                                    不透明度(0~1)：
                                </TextBlock>
                                <Slider
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    IsSnapToTickEnabled="False"
                                    LargeChange="0.01"
                                    Maximum="1"
                                    Minimum="0"
                                    SmallChange="0.01"
                                    TickFrequency="0.01"
                                    Value="{Binding Opacity, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=PixelGrid}">
                                    <i:Interaction.Behaviors>
                                        <behaviors:SliderMouseWheelBehavior />
                                    </i:Interaction.Behaviors>
                                </Slider>
                                <TextBox
                                    x:Name="OpacityTextBox"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    MinWidth="20"
                                    HorizontalAlignment="Stretch">
                                    <TextBox.Text>
                                        <Binding
                                            ElementName="PixelGrid"
                                            Mode="TwoWay"
                                            Path="Opacity"
                                            StringFormat="F2"
                                            UpdateSourceTrigger="PropertyChanged">
                                            <Binding.ValidationRules>
                                                <validation:NumericMinMaxValidateRule
                                                    ErrorMessage="输入值必须是{0}到{1}之间的小数"
                                                    MaxValue="1"
                                                    MinValue="0" />
                                            </Binding.ValidationRules>
                                        </Binding>
                                    </TextBox.Text>
                                </TextBox>
                                <TextBlock
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Grid.ColumnSpan="2"
                                    Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                                    Text="{Binding ElementName=OpacityTextBox, Path=(Validation.Errors), Converter={StaticResource ValidationErrorsConverter}}"
                                    TextWrapping="Wrap"
                                    Visibility="{Binding ElementName=OpacityTextBox, Path=(Validation.HasError), Converter={StaticResource BoolToVisibilityConverter}}" />
                            </StackPanel>
                        </GroupBox>
                        <CheckBox
                            x:Name="InverseColorCheckBox"
                            Content="反色"
                            IsChecked="{Binding InverseColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ElementName=PixelGrid}"
                            Visibility="{Binding IsCropped, Converter={StaticResource BoolToVisibilityConverter}}" />
                        <Button
                            Margin="0,5"
                            Padding="10,5"
                            HorizontalAlignment="Center"
                            Command="{s:Action CropImage}"
                            Content="像素化"
                            Style="{DynamicResource AccentButtonStyle}">
                            <i:Interaction.Triggers>
                                <i:DataTrigger Binding="{Binding IsCropped}" Value="True">
                                    <i:ChangePropertyAction PropertyName="Content" Value="回到原图" />
                                </i:DataTrigger>
                                <i:DataTrigger Binding="{Binding IsCropped}" Value="False">
                                    <i:ChangePropertyAction PropertyName="Content" Value="像素化" />
                                </i:DataTrigger>
                            </i:Interaction.Triggers>
                        </Button>
                        <Rectangle
                            Height="1"
                            Margin="0,5"
                            Fill="{DynamicResource TextFillColorDisabledBrush}" />
                        <Button
                            Command="{s:Action SaveImage}"
                            Content="保存当前项目"
                            Style="{DynamicResource AccentButtonStyle}" />
                        <Button
                            Command="{s:Action ClearHistoryCommand}"
                            Content="清空历史项目"
                            Style="{DynamicResource AccentButtonStyle}" />
                        <CheckBox Content="仅展示当前图片的项目" IsChecked="{Binding IsShowCurrentImageHistory, Mode=TwoWay}" />
                        <DataGrid
                            AutoGenerateColumns="False"
                            CanUserAddRows="False"
                            CanUserReorderColumns="False"
                            IsReadOnly="True"
                            IsSynchronizedWithCurrentItem="True"
                            ItemsSource="{Binding HistoryCells}"
                            LoadingRow="{s:Action DataGrid_LoadingRow}"
                            ScrollViewer.CanContentScroll="False"
                            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"
                            SelectedItem="{Binding SelectedCell, Mode=TwoWay}"
                            SelectionMode="Single">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Width="*" Header="项目名">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding ProjectName, Mode=OneWay}"
                                                TextWrapping="WrapWithOverflow"
                                                ToolTip="{Binding ProjectName, Mode=OneWay}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="*" Header="日期">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
                                                Text="{Binding DateTime, Mode=OneWay, StringFormat=yy-MM-dd HH:mm:ss}"
                                                TextWrapping="WrapWithOverflow"
                                                ToolTip="{Binding DateTime, Mode=OneWay, StringFormat=yy-MM-dd HH:mm:ss}" />
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Width="auto" Header="操作">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button
                                                Grid.Column="2"
                                                VerticalAlignment="Center"
                                                Command="{s:Action RemoveHistoryCommand}"
                                                CommandParameter="{Binding}"
                                                ToolTip="删除">
                                                X
                                            </Button>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </Border>
            </ScrollViewer>
        </Grid>
        <Grid Visibility="{Binding HasImage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverse, Mode=OneWay}">
            <Border Padding="5" Background="{DynamicResource SolidBackgroundFillColorSecondaryBrush}">
                <StackPanel VerticalAlignment="Center" Orientation="Vertical">
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontFamily="Segoe MDL2 Assets"
                        FontSize="80"
                        Text="&#xF4AA;" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="32"
                        Text="将单张JPG或PNG图片拖动到此处"
                        Visibility="{Binding HasError, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter=inverse}" />
                    <TextBlock
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        FontSize="32"
                        Foreground="{DynamicResource SystemFillColorCriticalBrush}"
                        Text="{Binding ErrorMessage, Mode=OneWay}"
                        Visibility="{Binding HasError, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}}" />
                    <Button
                        Margin="0,10"
                        HorizontalAlignment="Center"
                        Command="{s:Action ShowHistoryCommand}"
                        Content="查看历史项目"
                        Style="{DynamicResource AccentButtonStyle}" />
                </StackPanel>
            </Border>
            <Rectangle
                Stroke="{DynamicResource ControlElevationBorderBrush}"
                StrokeDashArray="2,3"
                StrokeThickness="3" />
        </Grid>
        <Popup
            Width="300"
            Height="155"
            IsOpen="{Binding IsShowPixelGridToolTip, Mode=OneWay}"
            Placement="Left"
            PlacementTarget="{Binding MouseOverGridRow, Mode=OneWay}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="5"
                    Text="{Binding MouseOverGridRow.DataContext.ProjectName, Mode=OneWay}" />
                <TextBlock
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="5"
                    Text="{Binding MouseOverGridRow.DataContext.DateTime, Mode=OneWay, StringFormat=yy-MM-dd HH:mm:ss}" />
                <local:PixelGrid
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Cells="{Binding MouseOverCells, Mode=OneWay}"
                    InverseColor="{Binding IsChecked, Mode=OneWay, ElementName=InverseColorCheckBox}"
                    IsShowRuler="False" />
            </Grid>
        </Popup>
    </Grid>
</Window>
